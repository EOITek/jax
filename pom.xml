<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.eoi</groupId>
    <artifactId>jax-root</artifactId>
    <packaging>pom</packaging>
    <version>1.0.0</version>
    <modules>
        <module>jax-api</module>
        <module>jax-core</module>
        <module>jax-common</module>
        <module>${jax.api.module}</module>
        <module>${jax.flink.entry.module}</module>
        <module>${jax.flink.job.version.module}</module>
        <module>jax-manager</module>
        <module>jax-web</module>
        <module>jax-tool</module>
        <module>jax-flink-job</module>
        <module>jax-flink-job-common</module>
        <!--<module>jax-tutorial</module>-->
    </modules>

    <name>jax-root</name>
    <description>Jax</description>
    <url>https://eoitek.com</url>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>http://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <jackson.version>2.10.5</jackson.version>
        <jackson.databind.version>2.10.5</jackson.databind.version>
        <java-webSocket.version>1.5.1</java-webSocket.version>
        <scala.version>2.11.12</scala.version>
        <scala.binary.version>2.11</scala.binary.version>
        <parser.combinators.version>1.1.1</parser.combinators.version>
        <joda.version>2.9.9</joda.version>
        <guava.version>20.0</guava.version>
        <hutool.version>5.1.0</hutool.version>
        <beanutils.version>1.9.4</beanutils.version>
        <slf4j.version>1.7.25</slf4j.version>
        <junit.version>4.12</junit.version>
        <flink.version>1.9.1</flink.version>
        <spark.version>2.4.1</spark.version>
        <exec.version>1.3</exec.version>
        <hadoop.version>2.10.0</hadoop.version>
        <mybatis.version>3.5.6</mybatis.version>
        <mybatis-plus.version>3.1.2</mybatis-plus.version>
        <mysql.version>8.0.17</mysql.version>
        <flyway.version>5.2.4</flyway.version>
        <aviator.version>5.2.2</aviator.version>
        <csv.version>2.4.0</csv.version>
        <swagger.version>2.9.2</swagger.version>

        <!--flink 1.9-->
        <flink.version>1.9.1</flink.version>
        <flink.table.planner>flink-table-planner_</flink.table.planner>
        <jax.api.module>jax-api-flink-1_9</jax.api.module>
        <jax.flink.entry.module>jax-flink-entry-1_9</jax.flink.entry.module>
        <jax.flink.job.version.module>jax-flink-job-1_9</jax.flink.job.version.module>

        <!--flink 1.12 idea 无法通过profile切换，只能手动在这里变更成flink1.12-->
<!--        <flink.version>1.12.3</flink.version>-->
<!--        <flink.table.planner>flink-table-planner-blink_</flink.table.planner>-->
<!--        <jax.flink.job.version.module>jax-flink-job-1_12</jax.flink.job.version.module>-->
<!--        <jax.api.module>jax-api-flink-1_12</jax.api.module>-->
<!--        <jax.flink.entry.module>jax-flink-entry-1_12</jax.flink.entry.module>-->
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- scala -->
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-compiler</artifactId>
                <version>${scala.version}</version>
            </dependency>
            <dependency>
                <groupId>org.scala-lang.modules</groupId>
                <artifactId>scala-parser-combinators_${scala.binary.version}</artifactId>
                <version>${parser.combinators.version}</version>
            </dependency>
            <!-- jackson -->
            <dependency>
                <groupId>com.fasterxml.jackson.module</groupId>
                <artifactId>jackson-module-scala_${scala.binary.version}</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.dataformat</groupId>
                <artifactId>jackson-dataformat-yaml</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-joda</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.databind.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-annotations</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-core</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <!-- log -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- test -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- flink -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-java</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-table-api-java-bridge_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>${flink.table.planner}${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-statebackend-rocksdb_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-state-processor-api_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-core</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-queryable-state-client-java</artifactId>
                <version>${flink.version}</version>
            </dependency>
            <!-- spark -->
            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-core_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-sql_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-mllib_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.apache.spark</groupId>
                <artifactId>spark-hive_${scala.binary.version}</artifactId>
                <version>${spark.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-log4j12</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.hadoop</groupId>
                <artifactId>hadoop-client</artifactId>
                <version>${hadoop.version}</version>
            </dependency>

            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>${joda.version}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-core</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-http</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-crypto</artifactId>
                <version>${hutool.version}</version>
            </dependency>

            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-exec</artifactId>
                <version>${exec.version}</version>
            </dependency>
            <dependency>
                <groupId>com.googlecode.aviator</groupId>
                <artifactId>aviator</artifactId>
                <version>${aviator.version}</version>
            </dependency>

            <!-- WebSocket -->
            <dependency>
                <groupId>org.java-websocket</groupId>
                <artifactId>Java-WebSocket</artifactId>
                <version>${java-webSocket.version}</version>
            </dependency>

            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>

            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>

            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
            </dependency>

            <dependency>
                <groupId>org.flywaydb</groupId>
                <artifactId>flyway-core</artifactId>
                <version>${flyway.version}</version>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger2</artifactId>
                <version>${swagger.version}</version>
                <exclusions>
                    <exclusion>
                        <artifactId>byte-buddy</artifactId>
                        <groupId>net.bytebuddy</groupId>
                    </exclusion>
                    <exclusion>
                        <artifactId>mapstruct</artifactId>
                        <groupId>org.mapstruct</groupId>
                    </exclusion>
                    <!--<exclusion>-->
                    <!--<artifactId>spring-aop</artifactId>-->
                    <!--<groupId>org.springframework</groupId>-->
                    <!--</exclusion>-->
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.springfox</groupId>
                <artifactId>springfox-swagger-ui</artifactId>
                <version>${swagger.version}</version>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <build>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>3.0</version>
                    <executions>
                        <!--<execution>-->
                            <!--<id>license</id>-->
                            <!--<phase>generate-sources</phase>-->
                            <!--<goals>-->
                                <!--<goal>remove</goal>-->
                                <!--<goal>format</goal>-->
                            <!--</goals>-->
                        <!--</execution>-->
                        <execution>
                            <id>license</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <header>dev/APACHE-2.txt</header>
                        <excludes>
                            <exclude>**/*.properties</exclude>
                            <exclude>**/*.sh</exclude>
                            <exclude>**/*.yml</exclude>
                            <exclude>**/*.md</exclude>
                            <exclude>**/*.xml</exclude>
                            <exclude>**/resources/**</exclude>
                            <exclude>.editorconfig</exclude>
                            <exclude>.gitignore</exclude>
                            <exclude>mvnw.cmd</exclude>
                            <exclude>Dockerfile</exclude>
                            <exclude>Makefile</exclude>
                            <exclude>jax-ui/**</exclude>
                            <exclude>tmp/**</exclude>
                        </excludes>
                        <mapping>
                            <java>SLASHSTAR_STYLE</java>
                            <scala>SLASHSTAR_STYLE</scala>
                        </mapping>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>3.1.2</version>
                    <dependencies>
                        <dependency>
                            <groupId>com.puppycrawl.tools</groupId>
                            <artifactId>checkstyle</artifactId>
                            <version>8.41.1</version>
                        </dependency>
                    </dependencies>
                    <executions>
                        <execution>
                            <id>checkstyle</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                                <logViolationsToConsole>true</logViolationsToConsole>
                                <failOnViolation>true</failOnViolation>
                                <includeTestSourceDirectory>true</includeTestSourceDirectory>
                                <configLocation>dev/google_checks.xml</configLocation>
                                <violationSeverity>warning</violationSeverity>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>3.1.4</version>
                    <executions>
                        <!-- Run scala compiler in the process-resources phase, so that dependencies on
                            scala classes can be resolved later in the (Java) compile phase -->
                        <execution>
                            <id>scala-compile-first</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>compile</goal>
                            </goals>
                        </execution>

                        <!-- Run scala compiler in the process-test-resources phase, so that dependencies on
                             scala classes can be resolved later in the (Java) test-compile phase -->
                        <execution>
                            <id>scala-test-compile</id>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>

                        <execution>
                            <id>scala-add-source</id>
                            <phase>package</phase>
                            <goals>
                                <goal>add-source</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <jvmArgs>
                            <jvmArg>-Xms128m</jvmArg>
                            <jvmArg>-Xmx512m</jvmArg>
                        </jvmArgs>
                        <addScalacArgs>-target:jvm-1.8</addScalacArgs>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>flink12</id>
            <properties>
                <flink.version>1.12.3</flink.version>
                <flink.table.planner>flink-table-planner-blink_</flink.table.planner>
                <jax.flink.job.version.module>jax-flink-job-1_12</jax.flink.job.version.module>
                <jax.api.module>jax-api-flink-1_12</jax.api.module>
                <jax.flink.entry.module>jax-flink-entry-1_12</jax.flink.entry.module>
            </properties>
        </profile>
        <!--skip check of license ,style, javadoc when fast compile -->
        <profile>
            <id>dev_skip</id>
            <activation>
                <property>
                    <name>dev_skip</name>
                </property>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>com.mycila</groupId>
                            <artifactId>license-maven-plugin</artifactId>
                            <configuration>
                                <skip>true</skip>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-checkstyle-plugin</artifactId>
                            <configuration>
                                <skip>true</skip>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-enforcer-plugin</artifactId>
                            <configuration>
                                <skip>true</skip>
                            </configuration>
                        </plugin>
                        <plugin>
                            <groupId>org.apache.maven.plugins</groupId>
                            <artifactId>maven-javadoc-plugin</artifactId>
                            <configuration>
                                <skip>true</skip>
                            </configuration>
                        </plugin>

                    </plugins>
                </pluginManagement>
            </build>
        </profile>

        <!--<profile>-->
            <!--<id>gen_license</id>-->
            <!--<activation>-->
                <!--<property>-->
                    <!--<name>gen_license</name>-->
                <!--</property>-->
                <!--<activeByDefault>true</activeByDefault>-->
            <!--</activation>-->
            <!--<build>-->
                <!--<pluginManagement>-->
                    <!--<plugins>-->
                        <!--<plugin>-->
                            <!--<groupId>com.mycila</groupId>-->
                            <!--<artifactId>license-maven-plugin</artifactId>-->
                            <!--<version>3.0</version>-->
                            <!--<executions>-->
                                <!--<execution>-->
                                    <!--<phase>generate-sources</phase>-->
                                    <!--<goals>-->
                                        <!--<goal>remove</goal>&lt;!&ndash; remove：删除创建的版本信息 &ndash;&gt;-->
                                        <!--<goal>format</goal>&lt;!&ndash; format：如果存在就更新，不存在就创建 &ndash;&gt;-->
                                    <!--</goals>-->
                                <!--</execution>-->
                            <!--</executions>-->
                            <!--<configuration>-->
                                <!--<quiet>true</quiet>-->
                                <!--<header>../dev/APACHE-2.txt</header>-->
                                <!--<excludes>-->
                                    <!--<exclude>**/*.properties</exclude>-->
                                    <!--<exclude>**/*.sh</exclude>-->
                                    <!--<exclude>**/*.yml</exclude>-->
                                    <!--<exclude>**/*.md</exclude>-->
                                    <!--<exclude>**/*.xml</exclude>-->
                                    <!--<exclude>**/resources/**</exclude>-->
                                    <!--<exclude>.editorconfig</exclude>-->
                                    <!--<exclude>.gitignore</exclude>-->
                                    <!--<exclude>mvnw.cmd</exclude>-->
                                    <!--<exclude>Dockerfile</exclude>-->
                                    <!--<exclude>Makefile</exclude>-->
                                    <!--<exclude>jax-ui/**</exclude>-->
                                    <!--<exclude>tmp/**</exclude>-->
                                <!--</excludes>-->
                                <!--<strictCheck>true</strictCheck>-->
                                <!--<mapping>-->
                                    <!--<java>SLASHSTAR_STYLE</java>-->
                                    <!--<scala>SLASHSTAR_STYLE</scala>-->
                                <!--</mapping>-->
                            <!--</configuration>-->
                        <!--</plugin>-->

                    <!--</plugins>-->
                <!--</pluginManagement>-->
            <!--</build>-->
        <!--</profile>-->
    </profiles>
</project>
